name: Production

on:
  push:
    tags:
      - v*

concurrency:
  group: preproduction
  cancel-in-progress: true

jobs:

  ##############################################################################
  ## BUILD BACKEND PACKAGE 
  ##############################################################################
  build-backend:
    name: Build backend
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Node setup
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Yarn cache setup
      uses: c-hive/gha-yarn-cache@v1

    - name: Install backend dependencies
      run: yarn workspace @domifa/backend install --frozen-lockfile --prefer-offline

    - name: Build backend
      run: yarn workspace @domifa/backend build

    - name: Archive backend build
      uses: actions/upload-artifact@v2
      with:
        name: backend-dist
        path: packages/backend/dist

  ##############################################################################
  ## BUILD FRONTEND PACKAGE 
  ##############################################################################
  build-frontend:
    name: Build front-end
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Node setup
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Yarn cache setup
      uses: c-hive/gha-yarn-cache@v1

    - name: Install front-end dependencies
      run: yarn --cwd packages/frontend install --frozen-lockfile --prefer-offline

    - name: Build front-end
      run: yarn --cwd packages/frontend build

    - name: Archive front-end build
      uses: actions/upload-artifact@v2
      with:
        name: frontend-dist
        path: packages/frontend/dist

  ##############################################################################
  ## BUILD AND REGISTER BACKEND IMAGE
  ##############################################################################
  register-backend:
    name: Register backend
    runs-on: ubuntu-latest
    needs: build-backend
    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get project name
      run: |
        echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: Download backend build
      uses: actions/download-artifact@v2
      with:
        name: backend-dist
        path: packages/backend/dist

    - name: Create image labels and tags
      id: docker_meta
      uses: "crazy-max/ghaction-docker-meta@2e1a5c7fa42123697f82d479b551a1bbdb1bef88"
      with:
        images: ghcr.io/socialgouv/${{ env.project }}/backend
        labels: |
          org.opencontainers.image.title=backend
          org.opencontainers.image.documentation=https://github.com/SocialGouv/${{ env.project }}/tree/${{ github.sha }}
        tags: |
          type=sha
          type=ref,event=pr
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=raw,value=sha-${{ github.sha }}
          type=semver,pattern={{major}}.{{minor}}

    - name: Set up Buildx
      id: buildx
      uses: docker/setup-buildx-action@master
      with:
        install: true

    - name: Registry authentication
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ secrets.SOCIALGROOVYBOT_NAME }}
        password: ${{ secrets.SOCIALGROOVYBOT_GHCR_PAT }}

    - name: Image build and register
      uses: docker/build-push-action@v2
      with:
        context: .
        push: 'true'
        file: packages/backend/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        tags: "${{ steps.docker_meta.outputs.tags }}"
        labels: "${{ steps.docker_meta.outputs.labels }}"

  ##############################################################################
  ## BUILD AND REGISTER FRONTEND IMAGE
  ##############################################################################
  register-frontend:
    name: Register front-end
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get project name
      run: |
        echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: Download front-end build
      uses: actions/download-artifact@v2
      with:
        name: frontend-dist
        path: packages/frontend/dist

    - name: Create image labels and tags
      id: docker_meta
      uses: "crazy-max/ghaction-docker-meta@2e1a5c7fa42123697f82d479b551a1bbdb1bef88"
      with:
        images: ghcr.io/socialgouv/${{ env.project }}/frontend
        labels: |
          org.opencontainers.image.title=frontend
          org.opencontainers.image.documentation=https://github.com/SocialGouv/${{ env.project }}/tree/${{ github.sha }}
        tags: |
          type=sha
          type=ref,event=pr
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=raw,value=sha-${{ github.sha }}
          type=semver,pattern={{major}}.{{minor}}

    - name: Set up Buildx
      id: buildx
      uses: docker/setup-buildx-action@master
      with:
        install: true

    - name: Registry authentication
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ secrets.SOCIALGROOVYBOT_NAME }}
        password: ${{ secrets.SOCIALGROOVYBOT_GHCR_PAT }}

    - name: Image build and register
      uses: docker/build-push-action@v2
      with:
        context: .
        push: 'true'
        file: packages/frontend/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        tags: "${{ steps.docker_meta.outputs.tags }}"
        labels: "${{ steps.docker_meta.outputs.labels }}"
